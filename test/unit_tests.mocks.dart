// Mocks generated by Mockito 5.4.4 from annotations
// in meow_ai/test/unit_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:camera/camera.dart' as _i10;
import 'package:image_picker/image_picker.dart' as _i11;
import 'package:meow_ai/models/cat_breed.dart' as _i4;
import 'package:meow_ai/models/recognition_result.dart' as _i6;
import 'package:meow_ai/models/user.dart' as _i7;
import 'package:meow_ai/services/breed_data_service.dart' as _i2;
import 'package:meow_ai/services/camera_service.dart' as _i9;
import 'package:meow_ai/services/database_service.dart' as _i5;
import 'package:meow_ai/services/ml_service.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BreedDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedDataService extends _i1.Mock implements _i2.BreedDataService {
  MockBreedDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  List<_i4.CatBreed> getAllBreeds() => (super.noSuchMethod(
        Invocation.method(
          #getAllBreeds,
          [],
        ),
        returnValue: <_i4.CatBreed>[],
      ) as List<_i4.CatBreed>);

  @override
  _i4.CatBreed? getBreedById(String? id) =>
      (super.noSuchMethod(Invocation.method(
        #getBreedById,
        [id],
      )) as _i4.CatBreed?);

  @override
  _i4.CatBreed? getBreedByName(String? name) =>
      (super.noSuchMethod(Invocation.method(
        #getBreedByName,
        [name],
      )) as _i4.CatBreed?);

  @override
  _i4.CatBreed? getBreedByLabel(String? label) =>
      (super.noSuchMethod(Invocation.method(
        #getBreedByLabel,
        [label],
      )) as _i4.CatBreed?);

  @override
  Map<String, dynamic> getBreedStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getBreedStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i5.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveRecognitionResult(_i6.RecognitionResult? result) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveRecognitionResult,
          [result],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getRecognitionResults({
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecognitionResults,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getRecognitionsByBreed(
          String? breedId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecognitionsByBreed,
          [breedId],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> deleteRecognitionResult(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteRecognitionResult,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> addToFavorites({
    required String? id,
    String? recognitionId,
    String? breedId,
    String? imagePath,
    String? note,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorites,
          [],
          {
            #id: id,
            #recognitionId: recognitionId,
            #breedId: breedId,
            #imagePath: imagePath,
            #note: note,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> removeFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteFavoriteByRecognition(String? recognitionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavoriteByRecognition,
          [recognitionId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isFavorite(String? recognitionId) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [recognitionId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveNote({
    required String? id,
    required String? recognitionId,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveNote,
          [],
          {
            #id: id,
            #recognitionId: recognitionId,
            #content: content,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>?> getNoteByRecognition(
          String? recognitionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNoteByRecognition,
          [recognitionId],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> updateNote(
    String? id,
    String? content,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [
            id,
            content,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteNoteByRecognition(String? recognitionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNoteByRecognition,
          [recognitionId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getHistory({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [],
          {#limit: limit},
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<Map<String, int>> getStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getStatistics,
          [],
        ),
        returnValue: _i3.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i3.Future<Map<String, int>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getBreedCounts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBreedCounts,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> saveUser(_i7.User? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i7.User?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i3.Future<_i7.User?>.value(),
      ) as _i3.Future<_i7.User?>);

  @override
  _i3.Future<bool> saveUserPreferences(_i7.UserPreferences? preferences) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserPreferences,
          [preferences],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i7.UserPreferences?> getUserPreferences() => (super.noSuchMethod(
        Invocation.method(
          #getUserPreferences,
          [],
        ),
        returnValue: _i3.Future<_i7.UserPreferences?>.value(),
      ) as _i3.Future<_i7.UserPreferences?>);

  @override
  _i3.Future<bool> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  Map<String, dynamic> getDatabaseInfo() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseInfo,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [MLService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMLService extends _i1.Mock implements _i8.MLService {
  MockMLService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i6.RecognitionResult?> recognizeBreedEnhanced(
    String? imagePath, {
    bool? useTestTimeAugmentation = true,
    int? numAugmentations = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recognizeBreedEnhanced,
          [imagePath],
          {
            #useTestTimeAugmentation: useTestTimeAugmentation,
            #numAugmentations: numAugmentations,
          },
        ),
        returnValue: _i3.Future<_i6.RecognitionResult?>.value(),
      ) as _i3.Future<_i6.RecognitionResult?>);

  @override
  _i3.Future<_i6.RecognitionResult?> recognizeBreed(String? imagePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #recognizeBreed,
          [imagePath],
        ),
        returnValue: _i3.Future<_i6.RecognitionResult?>.value(),
      ) as _i3.Future<_i6.RecognitionResult?>);

  @override
  Map<String, dynamic> getPerformanceStats() => (super.noSuchMethod(
        Invocation.method(
          #getPerformanceStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getModelInfo() => (super.noSuchMethod(
        Invocation.method(
          #getModelInfo,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool supportsBreed(String? breedName) => (super.noSuchMethod(
        Invocation.method(
          #supportsBreed,
          [breedName],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String> getSupportedBreeds() => (super.noSuchMethod(
        Invocation.method(
          #getSupportedBreeds,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i3.Future<Map<String, dynamic>> benchmark({int? iterations = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #benchmark,
          [],
          {#iterations: iterations},
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CameraService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraService extends _i1.Mock implements _i9.CameraService {
  MockCameraService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasCamera => (super.noSuchMethod(
        Invocation.getter(#hasCamera),
        returnValue: false,
      ) as bool);

  @override
  bool get hasFrontCamera => (super.noSuchMethod(
        Invocation.getter(#hasFrontCamera),
        returnValue: false,
      ) as bool);

  @override
  bool get hasBackCamera => (super.noSuchMethod(
        Invocation.getter(#hasBackCamera),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i10.CameraController?> initializeCameraController({
    int? cameraIndex = 0,
    _i10.ResolutionPreset? resolution = _i10.ResolutionPreset.high,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeCameraController,
          [],
          {
            #cameraIndex: cameraIndex,
            #resolution: resolution,
          },
        ),
        returnValue: _i3.Future<_i10.CameraController?>.value(),
      ) as _i3.Future<_i10.CameraController?>);

  @override
  _i3.Future<String?> takePhoto() => (super.noSuchMethod(
        Invocation.method(
          #takePhoto,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<String?> pickImageFromGallery() => (super.noSuchMethod(
        Invocation.method(
          #pickImageFromGallery,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<String?> pickImage({required _i11.ImageSource? source}) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {#source: source},
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<_i10.CameraController?> switchCamera() => (super.noSuchMethod(
        Invocation.method(
          #switchCamera,
          [],
        ),
        returnValue: _i3.Future<_i10.CameraController?>.value(),
      ) as _i3.Future<_i10.CameraController?>);

  @override
  _i3.Future<void> setFlashMode(_i10.FlashMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setFlashMode,
          [mode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setZoomLevel(double? zoom) => (super.noSuchMethod(
        Invocation.method(
          #setZoomLevel,
          [zoom],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<double> getMaxZoomLevel() => (super.noSuchMethod(
        Invocation.method(
          #getMaxZoomLevel,
          [],
        ),
        returnValue: _i3.Future<double>.value(0.0),
      ) as _i3.Future<double>);

  @override
  _i3.Future<double> getMinZoomLevel() => (super.noSuchMethod(
        Invocation.method(
          #getMinZoomLevel,
          [],
        ),
        returnValue: _i3.Future<double>.value(0.0),
      ) as _i3.Future<double>);

  @override
  _i3.Future<Map<String, bool>> checkPermissions() => (super.noSuchMethod(
        Invocation.method(
          #checkPermissions,
          [],
        ),
        returnValue: _i3.Future<Map<String, bool>>.value(<String, bool>{}),
      ) as _i3.Future<Map<String, bool>>);

  @override
  _i3.Future<bool> requestCameraPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestCameraPermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> requestStoragePermission() => (super.noSuchMethod(
        Invocation.method(
          #requestStoragePermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> cleanupOldImages({int? olderThanDays = 30}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupOldImages,
          [],
          {#olderThanDays: olderThanDays},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getStorageInfo() => (super.noSuchMethod(
        Invocation.method(
          #getStorageInfo,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
